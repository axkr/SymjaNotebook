{
  "type": "ResearchNotebook",
  "version": 1,
  "cells": [
    {
      "type": "m",
      "source": "<<\"https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/master/SSparseMatrix.m\"",
      "output": [
        {
          "type": "text",
          "text": "Null"
        }
      ]
    },
    {
      "type": "m",
      "source": "rmat = MakeSSparseMatrix[\n             {{1, 1} -> 1, {2, 2} -> 2, {4, 3} -> 3, {1, 4} -> 4, {3, 5} -> 2},\n             \"ColumnNames\" -> {\"a\", \"b\", \"c\", \"d\", \"e\"},\n             \"RowNames\" -> {\"A\", \"B\", \"C\", \"D\"},\n             \"DimensionNames\" -> {\"U\", \"V\"}]",
      "output": [
        {
          "type": "text",
          "text": "SSparseMatrix[<|SparseMatrix->SparseArray(Number of elements: 5 Dimensions: {4,5} Default value: 0),RowNames-><|A->\n1,B->2,C->3,D->4|>,ColumnNames-><|a->1,b->2,c->3,d->4,e->5|>,DimensionNames-><|U->\n1,V->2|>|>]"
        }
      ]
    },
    {
      "type": "m",
      "source": "rmat // MatrixForm",
      "sequence": 1,
      "output": [
        {
          "type": "text",
          "text": "{{1,0,0,4,0},\n {0,2,0,0,0},\n {0,0,0,0,2},\n {0,0,3,0,0}}"
        }
      ]
    },
    {
      "type": "m",
      "source": "rmat // MatrixPlot",
      "sequence": 2,
      "output": [
        {
          "type": "text",
          "text": "JSFormData[        var target_plotly = document.getElementById('plotly');\r\n        var layout = {\r\n    title: 'MatrixPlot',\r\n    height: 400,\r\n    width: 600,\r\n    autosize: true,\r\n\r\n\r\n};\r\n\r\nvar trace0 =\r\n{\r\nx: [\"1\",\"2\",\"3\",\"4\",\"5\"],\r\ny: [\"1\",\"2\",\"3\",\"4\"],\r\nz: [[1.0,0.0,0.0,4.0,0.0,],[0.0,2.0,0.0,0.0,0.0,],[0.0,0.0,0.0,0.0,2.0,],[0.0,0.0,3.0,0.0,0.0,],],\r\nxaxis: 'x',\r\nyaxis: 'y',\r\ntype: 'heatmap',\r\nname: '',\r\n};\r\n\r\n        var data = [ trace0];\r\nPlotly.newPlot(target_plotly, data, layout);        ,plotly]"
        }
      ]
    },
    {
      "type": "m",
      "source": "RowNames[rmat]",
      "sequence": 3,
      "output": [
        {
          "type": "text",
          "text": "{A,B,C,D}"
        }
      ]
    },
    {
      "type": "m",
      "source": "ColumnNames[rmat]",
      "sequence": 4,
      "output": [
        {
          "type": "text",
          "text": "{a,b,c,d,e}"
        }
      ]
    },
    {
      "type": "m",
      "source": "DimensionNames[rmat]",
      "sequence": 5,
      "output": [
        {
          "type": "text",
          "text": "{U,V}"
        }
      ]
    },
    {
      "type": "m",
      "source": "rmat.Transpose[rmat[[{1}, All]]]",
      "sequence": 6,
      "output": [
        {
          "type": "text",
          "text": "SSparseMatrix[<|SparseMatrix->SparseArray(Number of elements: 1 Dimensions: {4,1} Default value: 0),RowNames-><|A->\n1,B->2,C->3,D->4|>,ColumnNames-><|A->1|>,DimensionNames-><|1->1,2->2|>|>]"
        }
      ]
    },
    {
      "type": "m",
      "source": "rmat[[{\"C\", \"D\", \"A\", \"B\"}, {\"c\", \"d\", \"e\", \"a\", \"b\"}]]",
      "sequence": 7,
      "output": [
        {
          "type": "text",
          "text": "SSparseMatrix[<|SparseMatrix->SparseArray(Number of elements: 5 Dimensions: {4,5} Default value: 0),RowNames-><|C->\n1,D->2,A->3,B->4|>,ColumnNames-><|c->1,d->2,e->3,a->4,b->5|>,DimensionNames-><|U->\n1,V->2|>|>]"
        }
      ]
    },
    {
      "type": "m",
      "source": "rmat2 = ToSSparseMatrix[rmat, \"RowNames\" -> Map[\"s.\" <> # &, RowNames[rmat]]]",
      "sequence": 8,
      "output": [
        {
          "type": "text",
          "text": "SSparseMatrix[<|SparseMatrix->SparseArray(Number of elements: 5 Dimensions: {4,5} Default value: 0),RowNames-><|s.A->\n1,s.B->2,s.C->3,s.D->4|>,ColumnNames-><|a->1,b->2,c->3,d->4,e->5|>,DimensionNames-><|U->\n1,V->2|>|>]"
        }
      ]
    },
    {
      "type": "m",
      "source": "RowBind[rmat, rmat] // MatrixForm",
      "sequence": 9,
      "output": [
        {
          "type": "text",
          "text": "{{1,0,0,4,0},\n {0,2,0,0,0},\n {0,0,0,0,2},\n {0,0,3,0,0},\n {1,0,0,4,0},\n {0,2,0,0,0},\n {0,0,0,0,2},\n {0,0,3,0,0}}"
        }
      ]
    },
    {
      "type": "m",
      "source": "RowBind[rmat, rmat2] // MatrixForm",
      "sequence": 10,
      "output": [
        {
          "type": "text",
          "text": "{{1,0,0,4,0},\n {0,2,0,0,0},\n {0,0,0,0,2},\n {0,0,3,0,0},\n {1,0,0,4,0},\n {0,2,0,0,0},\n {0,0,0,0,2},\n {0,0,3,0,0}}"
        }
      ]
    },
    {
      "type": "m",
      "source": ""
    }
  ]
}